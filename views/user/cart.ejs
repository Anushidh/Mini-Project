<%- include("../partials/header") %>

    <!--breadcrumbs area start-->
    <div class="breadcrumbs_area other_bread">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="breadcrumb_content">
                        <ul>
                            <li><a href="/login">home</a></li>
                            <li>/</li>
                            <li>cart</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--breadcrumbs area end-->

    <!--shopping cart area start -->
    <div class="shopping_cart_area">
        <div class="container">
            <form action="#" method="post">
                <div class="row">
                    <div class="col-12">
                        <div class="table_desc">
                            <div class="cart_page table-responsive">
                                <table>
                                    <thead>
                                        <tr>

                                            <th class="product_thumb">Image</th>
                                            <th class="product_name">Product</th>
                                            <th class="product-price">Price</th>
                                            <th class="product_size">Size</th>
                                            <th class="product_quantity">Quantity</th>
                                            <th class="product_total">Total</th>
                                            <th class="product_remove">Delete</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for (let i=0; i < allCartItems.length; i++) { %>

                                            <tr>

                                                <td class=" image product_thumb"><a href="#"><img
                                                            src="/uploads/product-images/<%=allCartItems[i].product.productImage[0] %>"
                                                            alt=""></a></td>
                                                <td class="product_name"><a href="#">
                                                        <%= allCartItems[i].product.productName %>
                                                    </a></td>
                                                <td class="product-price">
                                                    <%= allCartItems[i].product.salePrice %>
                                                </td>
                                                <td class="product_size">
                                                    <%= allCartItems[i].size %>
                                                </td>

                                                <td class="product_quantity">
                                                    <input id="quantity<%= allCartItems[i].product._id %>" min="1"
                                                        max="5" value="<%= allCartItems[i].quantity %>" type="number"
                                                        onchange="updateQuantityAndMax('<%= allCartItems[i].item._id %>', '<%= allCartItems[i]._id %>', this.value, '<%= allCartItems[i].size %>', '<%= allCartItems[i].product.salePrice %>')">
                                                </td>

                                                <td class="product_total"
                                                    id="product_total_<%= allCartItems[i].product._id %>">
                                                    <%= allCartItems[i].product.salePrice * allCartItems[i].quantity %>
                                                </td>
                                                <td class="product_remove">
                                                    <a href="#"
                                                        onclick="productRemove('<%= allCartItems[i].item._id %>', '<%= allCartItems[i]._id %>', '<%= allCartItems[i].size %>')">
                                                        <i class="fa fa-trash-o"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                            <% } %>

                                    </tbody>
                                </table>
                            </div>
                            <div class="cart_submit" id="clearCartButton">
                                <button type="button">clear cart</button>
                            </div>

                        </div>
                    </div>
                </div>

                <!--coupon code area start-->
                <div class="coupon_area">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <div class="coupon_code left">
                                <h3>Coupon</h3>
                                <div class="coupon_inner">
                                    <div class="coupon-dropdown" style="height: 40px;">
                                        <select id="couponSelect" class="coupon-select" style="height: 100%;">
                                            <option value="">Select a coupon</option>
                                            <% availableCoupons.forEach(function(coupon) { %>
                                                <option value="<%= coupon.couponCode %>"
                                                    data-discount="<%= coupon.discount %>">
                                                    <%= coupon.couponCode %> - <%= coupon.discount %>
                                                          %  OFF
                                                            <% if (coupon.isActive==='Active' ) { %>
                                                                (Expires: <%= coupon.expiryDate.toLocaleDateString() %>)
                                                                    <% } else { %>
                                                                        (Expired)
                                                                        <% } %>
                                                </option>
                                                <% }); %>
                                        </select>
                                    </div>
                                    <button id="couponButton" type="button" style="margin-top: 10px;">
                                        <% if (couponApplied) { %> <!-- Check if appliedCouponCode is truthy -->
                                            Remove Coupon <!-- If coupon applied, show Remove Coupon button -->
                                            <% } else { %>
                                                Apply Coupon <!-- If no coupon applied, show Apply Coupon button -->
                                                <% } %>
                                    </button>
                                    <div id="couponMessage"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 col-md-6">
                            <div class="coupon_code right">
                                <h3>Cart Totals</h3>
                                <div class="coupon_inner">
                                    <div class="cart_subtotal" id="totalAmount">
                                        <p>Total</p>
                                        <p class="cart_amount">
                                            <%= totalAmount %>
                                        </p>
                                    </div>
                                    <div class="checkout_btn">
                                        <a href="/checkoutPage">Proceed to Checkout</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--coupon code area end-->

            </form>
        </div>
    </div>
    <!--shopping cart area end -->



    <%- include("../partials/footer") %>

        <script>

            document.addEventListener("DOMContentLoaded", function () {
                // Add event listener to the Apply/Remove Coupon button
                document.getElementById("couponButton").addEventListener("click", function () {
                    var couponCode = document.getElementById("couponSelect").value;
                    var button = document.getElementById("couponButton");
                    var buttonLabel = button.textContent.trim();

                    if (buttonLabel === "Apply Coupon") {
                        // Send request to apply coupon
                        applyCoupon(couponCode);
                    } else {
                        // Send request to remove coupon
                        removeCoupon();
                    }
                });
            });


            async function applyCoupon(couponCode) {
                const totalAmountElement = document.querySelector('#totalAmount .cart_amount');
                const totalAmount = parseFloat(totalAmountElement.textContent.replace(/[^0-9.-]+/g, ""));
                console.log(totalAmount);
                if (totalAmount === 0) {
                    Toastify({
                        text: 'Please add products to your cart before applying a coupon.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'center',
                        backgroundColor: '#ff6347',
                    }).showToast();
                    return;
                }
                if (totalAmount <= 500) {
                    Toastify({
                        text: 'Minimum purchase amount not met.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'center',
                        backgroundColor: '#ff6347',
                    }).showToast();
                    return;
                }
                if(!couponCode) {
                    Toastify({
                        text: 'No coupon selected',
                        duration: 3000,
                        gravity: 'top',
                        position: 'center',
                        backgroundColor: '#ff6347',
                    }).showToast();
                    return; 
                }
                try {
                    const response = await fetch("/applyCoupon", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ couponCode: couponCode })
                    });
                    if (response.ok) {
                        const data = await response.json();
                        Swal.fire({
                            icon: 'success',
                            title: 'Coupon Applied',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500
                        });
                        // Update total amount displayed in the HTML
                        document.getElementById("totalAmount").innerHTML = `
                <p>Total</p>
                <p class="cart_amount">${data.cart.totalPrice}</p>
            `;
                        // Toggle button text between Apply Coupon and Remove Coupon
                        const button = document.getElementById("couponButton");
                        button.textContent = "Remove Coupon";
                    } else {
                        const errorMessage = await response.text();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: errorMessage
                        });
                    }
                } catch (error) {
                    console.error('Error applying coupon:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while applying the coupon'
                    });
                }
            }


            async function removeCoupon() {
                try {
                    const response = await fetch("/removeCoupon", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        }
                    });
                    if (response.ok) {
                        const data = await response.json();
                        Swal.fire({
                            icon: 'success',
                            title: 'Coupon Removed',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500
                        });
                        // Update total amount displayed in the HTML
                        document.getElementById("totalAmount").innerHTML = `
                <p>Total</p>
                <p class="cart_amount">${data.cart.totalPrice}</p>
            `;
                        // Toggle button text back to Apply Coupon
                        const button = document.getElementById("couponButton");
                        button.textContent = "Apply Coupon";
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        const errorMessage = await response.text();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: errorMessage
                        });
                    }
                } catch (error) {
                    console.error('Error removing coupon:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while removing the coupon'
                    });
                }
            }


            function updateQuantityAndMax(itemId, cartId, newQuantity, selectedSize, price) {
                console.log(itemId);
                console.log(cartId);
                console.log(newQuantity);
                console.log(selectedSize);
                console.log(price);

                fetch('/quantity-change', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId: itemId, cartId: cartId, quantity: newQuantity, selectedSize: selectedSize }),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById('quantity' + itemId).value = data.message.quantity;
                            document.getElementById('totalAmount').innerHTML = data.message.totalAmount;
                            var newTotal = data.message.quantity * price;
                            var totalTdId = 'product_total_' + itemId;
                            var totalTdElement = document.getElementById(totalTdId);
                            if (totalTdElement) {
                                totalTdElement.innerHTML = newTotal;
                            }
                            // Show success message
                            Toastify({
                                text: "Quantity updated successfully",
                                duration: 3000,
                                gravity: "top",
                                position: "center",
                                style: {
                                    background: "green",
                                },
                            }).showToast();
                        } else {
                            // Show error message
                            Toastify({
                                text: data.message,
                                duration: 3000,
                                gravity: "top",
                                position: "center",
                                style: {
                                    background: "red",
                                },
                            }).showToast();
                            setTimeout(() => {
                                window.location.reload();
                            }, 1000);
                        }
                    })
                    .catch(error => {
                        console.error('Error updating quantity:', error);
                        // Show error message
                        Toastify({
                            text: "An error occurred while updating the quantity",
                            duration: 3000,
                            gravity: "top",
                            position: "center",
                            style: {
                                background: "red",
                            },
                        }).showToast();
                    });
            }

            function productRemove(productId, cartId, size) {
                // console.log(cartId);
                // console.log(productId);
                // console.log(size);
                Swal.fire({
                    title: 'Do you want to remove this item from cart?',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/remove-cart-item/' + productId,
                            data: {
                                cartId: cartId,
                                size: size
                            },
                            type: 'post',
                        }).done((res) => {
                            Swal.fire('Success', `${res.message}`, 'success').then(() => {
                                location.reload();
                            });
                            console.log(`${res.message}`);
                            // Update the total amount
                            if (res.cartTotal) {
                                const totalAmountElement = document.getElementById('totalAmount');
                                const totalAmountText = totalAmountElement.querySelector('.cart_amount');
                                totalAmountText.textContent = res.cartTotal;
                            }
                        }).fail((error) => {
                            console.log(error);
                        });
                    }
                });

            }

            document.addEventListener('DOMContentLoaded', () => {
                const clearCartButton = document.getElementById('clearCartButton');
                clearCartButton.addEventListener('click', async (event) => {
                    event.preventDefault(); // Prevent default form submission behavior
                    try {
                        console.log('1');
                        const response = await fetch('/clear-cart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({})
                        });
                        const data = await response.json();
                        if (data.success) {
                            // Use Swal.fire for notification
                            Swal.fire({
                                icon: 'success',
                                title: 'Cart Cleared',
                                text: 'Your cart has been cleared successfully!',
                            }).then((result) => {
                                // Reload the page after clearing the cart
                                if (result.isConfirmed || result.isDismissed) {
                                    location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Failed to Clear Cart',
                                text: data.message,
                            });
                        }
                    } catch (error) {
                        console.error('Error clearing cart:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to clear cart. Please try again later.',
                        });
                    }
                    // Your fetch and Swal.fire logic goes here
                });
            });

        </script>